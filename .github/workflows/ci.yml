name: CI

on: [push, pull_request]

jobs:
  sqflint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - uses: arma-actions/sqflint@v1.0
        name: Validate with SQFLint

  mod:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1

      - name: HEMTT Build
        uses: docker://hemtt/hemtt:0.6.1
        with:
          entrypoint: hemtt
          args: build --release

      - name: Upload mod
        uses: actions/upload-artifact@v1
        with:
          name: 'mod'
          path: releases/1.0.0/@anrop

  extensions-linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install x86 dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install -y gcc-multilib libssl-dev:i386 pkg-config:i386
          rustup target add i686-unknown-linux-gnu

      - name: Cargo build x86
        run: cargo build --release --target=i686-unknown-linux-gnu

      - name: Cargo build x86_64
        run: cargo build --release --target=x86_64-unknown-linux-gnu

      - name: Copy built extensions
        run: |
          cp target/i686-unknown-linux-gnu/release/libanrop_aar.so anrop_aar.so
          cp target/x86_64-unknown-linux-gnu/release/libanrop_aar.so anrop_aar_x64.so

      - name: Upload Linux extensions
        uses: actions/upload-artifact@v2
        with:
          name: extensions-linux
          path: '*.so'

  extensions-windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install x86 dependencies
        run: rustup target add i686-pc-windows-msvc

      - name: Cargo build x86
        working-directory: extension
        run: cargo build --release --target=i686-pc-windows-msvc

      - name: Cargo build x86_64
        working-directory: extension
        run: cargo build --release --target=x86_64-pc-windows-msvc

      - name: Copy built extensions
        run: |
          copy target/i686-pc-windows-msvc/release/anrop_aar.dll anrop_aar.dll
          copy target/x86_64-pc-windows-msvc/release/anrop_aar.dll anrop_aar_x64.dll

      - name: Upload Windows extensions
        uses: actions/upload-artifact@v2
        with:
          name: extensions-windows
          path: '*.dll'

  package:
    runs-on: ubuntu-20.04
    needs:
      - extensions-linux
      - extensions-windows
      - mod
    steps:
      - name: Download mod
        uses: actions/download-artifact@v2
        with:
          name: 'mod'
          path: '@anrop_aar'

      - name: Download Linux extensions
        uses: actions/download-artifact@v2
        with:
          name: extensions-linux
          path: '@anrop_aar'

      - name: Download Windows extensions
        uses: actions/download-artifact@v2
        with:
          name: extensions-windows
          path: '@anrop_aar'

      - name: Upload built mod
        uses: actions/upload-artifact@v2
        with:
          name: '@anrop_aar'
          path: '.'
